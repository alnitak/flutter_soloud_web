// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// FFI bindings to SoLoud
class FlutterSoLoudFfi {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FlutterSoLoudFfi(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FlutterSoLoudFfi.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// --------------------- copy here the new functions to generate
  void getCaptureTexture(
    ffi.Pointer<ffi.Float> samples,
  ) {
    return _getCaptureTexture(
      samples,
    );
  }

  late final _getCaptureTexturePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Float>)>>(
          'getCaptureTexture');
  late final _getCaptureTexture =
      _getCaptureTexturePtr.asFunction<void Function(ffi.Pointer<ffi.Float>)>();
}

final class CaptureDevice extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.UnsignedInt()
  external int isDefault;
}
